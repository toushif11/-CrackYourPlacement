/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* curr1 = l1;
        ListNode* curr2 = l2;

        ListNode* dummy = new ListNode(-1);
        ListNode* res = dummy;

        int carry = 0;
        while(curr1 || curr2){
            int num1 = 0, num2 = 0;
            if(curr1){
                num1 = curr1 -> val;
                curr1 = curr1-> next;
            }

            if(curr2){
                num2 = curr2 -> val;
                curr2 = curr2-> next;
            }

            int num = num1 + num2 + carry;
            ListNode* newnode = new ListNode(num % 10);
            dummy -> next = newnode;
            dummy = dummy -> next;
            carry = num / 10;
        }

        if(carry > 0){
            ListNode* newnode = new ListNode(carry);
            dummy -> next = newnode;
            dummy = dummy -> next;
        }

        return res->next;
    }
};
