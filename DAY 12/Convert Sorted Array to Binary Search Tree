/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(int start, int end, vector<int>& nums) {
        if (start > end)
            return nullptr;

        int mid = start + (end - start) / 2;

        TreeNode* newnode = new TreeNode(nums[mid]);
        
        newnode->left = solve(start, mid - 1, nums);
        newnode->right = solve(mid + 1, end, nums);

        return newnode;
    }

    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int n = nums.size();
        if (n == 0)
            return nullptr;

        TreeNode* root = solve(0, n - 1, nums);
        return root;
    }
};
